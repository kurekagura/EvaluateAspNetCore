@page
@model WebApp.Pages.AspForm.IndexModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf

@{
    var handlerUrl = Url.Page(pageName: "/AspForm/Index", pageHandler: "FormData");
    // var oldCookieTokenAndHeader = Xsrf.GetAndStoreTokens(Context);
    // Xsrf.ClearTokenSet(Context);

    APluginForm APluginForm = new APluginForm();
    APluginForm.name_YesNoItems = new(){
            new MyYesNo { id = "yes", caption = "はい" },
            new MyYesNo { id = "no", caption = "いいえ" },
            new MyYesNo { id = "neither", caption = "どっちゃでもない" }
        };
}

<h4>asp-for</h4>

@section Heads{
    <style>
        form {
            border: solid 1px red;
        }
    </style>
}

<img src="" id="IdImg" />

<h5>プラグインA</h5>
<div class="my-plugin-a">
    <form onformchange="formChanged" method="post">
        <p>submitボタンの無いform</p>
        <div>
            <label asp-for="FigureItems"></label>
            @* POST対象にするにはSelectedXXXが必ず必要 *@
            <select asp-for="@APluginForm.name_SelectedFigureItem" asp-items="@Model.FigureItems"></select>
        </div>
        <div>
            @foreach (var i in APluginForm.name_YesNoItems)
            {
                <input type="radio" asp-for="@APluginForm.name_YesNoItems" id="@i.id" value="@i.id" />
                <label for="@i.id">@i.caption</label>
                <br />
            }
        </div>
        <div>
            <label asp-for="@APluginForm.name_MyInteger"></label>
            <input type="number" min="1" max="5" asp-for="@APluginForm.name_MyInteger" />
        </div>
        <div>
            <label asp-for="@APluginForm.name_MyDouble"></label>
            <input type="number" min="1.0" max="2.0" step="0.1" asp-for="@APluginForm.name_MyDouble" />
        </div>
    </form>
</div>

<h5>プラグインB</h5>
<div class="my-plugin-b" method="post">
    <form>
        <span>要調査：checkboxの挙動（確か何かあった）</span>
        <div><input type="checkbox" asp-for="BPlugin.name_MyCheckbox" /><label for="@Model.BPlugin.name_MyCheckbox">@Html.DisplayNameFor(m=>m.BPlugin.name_MyCheckbox)</label></div>
    </form>
</div>

<button type="button" id="IdPostBT">type="button"</button>

<img src="" id="IdResponseImg" />

@section Scripts{

    <script>

        function formChanged() {
            console.log('formChanged');
        }

        $(async () => {

            const blob = await fetchBlobFromUrlAsync('/tensai_vegetable.png');
            const imgElement = document.getElementById('IdImg');
            imgElement.src = URL.createObjectURL(blob);

            $('#IdPostBT').on('click', function () {
                const $form_a = $('.my-plugin-a').find('form:first');
                const $form_b = $('.my-plugin-b').find('form:first');

                const fd_a = new FormData($form_a.get(0)); //引数はDOM要素
                const fd_b = new FormData($form_b.get(0));
                deleteUnneededFromFormData(fd_a);
                deleteUnneededFromFormData(fd_b);

                for (var pair of fd_a.entries()) {
                    console.log(pair[0] + ': ' + pair[1]);
                }

                for (var pair of fd_b.entries()) {
                    console.log(pair[0] + ': ' + pair[1]);
                }

                const jstr_a = JSON.stringify(Object.fromEntries(fd_a.entries()));
                const jstr_b = JSON.stringify(Object.fromEntries(fd_b.entries()));

                const newFd = new FormData();
                newFd.append('plugins[0]', 'my-plugin-a:' + jstr_a);
                //nullやundefindをしていると文字列としてバインドされる。
                //またindexを飛ばすと以降のindexはバインドされないので注意。
                //newFd.append('plugins[1]', null);
                newFd.append('plugins[1]', 'my-plugin-b:' + jstr_b);
                //サーバサイドでjsonデシリアライズ型を判断するため、prefix:を付けておく。

                console.log(blob);
                newFd.append('binary', blob);

                fetch('@handlerUrl', {
                    method: 'POST',
                    body: newFd
                }).then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.blob();
                }).then(blob => {
                    const img = document.getElementById("IdResponseImg");
                    img.src = URL.createObjectURL(blob);
                }).catch(error => {
                    console.error(error);
                });
            });
        });

                        // FormDataにinput要素を直接入れることができる？
                        // $form.submit(function (event) {
                        //     // サブミット時にデータを設定
                        //     for (var key in formData) {
                        //         if (formData.hasOwnProperty(key)) {
                        //             $form.append($('<input>', {
                        //                 type: 'hidden',
                        //                 name: key,
                        //                 value: formData[key]
                        //             }));
                        //         }
                        //     }
                        // });

    </script>
}
